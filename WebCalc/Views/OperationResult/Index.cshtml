@model IEnumerable<DomainModels.Models.OperationResult>

@{
    ViewBag.Title = "Index";
    var message = ViewBag.Message as string;
}
<ul id="tabs" class="nav nav-tabs">
    <li class="active"><a data-toggle="tab" id="OperationResult">Результаты</a></li>
    <li><a data-toggle="tab" id="OperationFavorite">Избранное</a></li>
</ul>

@if (!string.IsNullOrWhiteSpace(message))
{
    <p class="bg-warning">@(message)</p>
}

@if (Model == null)
{
    return;
}
<div class="tab-content">
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Operation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.InputData)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Result)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ExecutionTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ExecutionDate)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
            {
            <tr class="@(item.IsLiked ? "like" : "dislike")">
                <td>
                    @Html.DisplayFor(modelItem => item.Operation)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InputData)
                </td>
                <td id="result">
                    @Html.DisplayFor(modelItem => item.Result)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExecutionTime)
                </td>
                <td class="dateExecution">
                    @Html.DisplayFor(modelItem => item.ExecutionDate)
                </td>
                <td>
                    <button type="button" class="btn btn-danger" onclick="Like(this, @item.Id)">@(item.IsLiked ? "dislike" : "like")</button>
                </td>
                <td>
                    <button type="button" class="btn btn-danger" onclick="NewResult(this, @item.Id, @item.OperationId, '@(item.InputData)')">Пересчитать</button>
                </td>
            </tr>
        }
    </table>
</div>

<script type="text/javascript">
    function Like(elem, id) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("Like")",
            data: { "id": id },
            success: function (msg) {
                if (msg.Success)
                    $(elem).html(msg.Name);
                else
                    alert(msg.Error);
            }
        });
    }

    function NewResult(elem, id, idOper, inputData) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("NewResult")",
            data: { "id": id, "idOper": idOper, "inputData": inputData },
            success: function (msg) {
                $("#result").html(msg.Result);
                $(elem).parent().parent().find(".dateExecution").html(msg.Time);
            }
        });
    }

    function Recalculate() {

    }

    jQuery("#OperationResult").click(function (e) {
        $(".dislike").show()
    });

    jQuery("#OperationFavorite").click(function (e) {
        $(".dislike").hide();
    });
</script>
